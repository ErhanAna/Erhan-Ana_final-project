// <auto-generated />
using System;
using Erhan_Ana_Maria_proiect_final.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ErhanAnaMariaproiectfinal.Migrations
{
    [DbContext(typeof(RecordStoreContext))]
    partial class RecordStoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Erhan_Ana_Maria_proiect_final.Models.Album", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Artist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6, 2");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Album", (string)null);
                });

            modelBuilder.Entity("Erhan_Ana_Maria_proiect_final.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("Erhan_Ana_Maria_proiect_final.Models.Label", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("LabelName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Label", (string)null);
                });

            modelBuilder.Entity("Erhan_Ana_Maria_proiect_final.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<int>("AlbumID")
                        .HasColumnType("int");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderID");

                    b.HasIndex("AlbumID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("Erhan_Ana_Maria_proiect_final.Models.ReleasedAlbum", b =>
                {
                    b.Property<int>("AlbumID")
                        .HasColumnType("int");

                    b.Property<int>("LabelID")
                        .HasColumnType("int");

                    b.HasKey("AlbumID", "LabelID");

                    b.HasIndex("LabelID");

                    b.ToTable("ReleasedAlbum", (string)null);
                });

            modelBuilder.Entity("Erhan_Ana_Maria_proiect_final.Models.Order", b =>
                {
                    b.HasOne("Erhan_Ana_Maria_proiect_final.Models.Album", "Album")
                        .WithMany("Orders")
                        .HasForeignKey("AlbumID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Erhan_Ana_Maria_proiect_final.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Erhan_Ana_Maria_proiect_final.Models.ReleasedAlbum", b =>
                {
                    b.HasOne("Erhan_Ana_Maria_proiect_final.Models.Album", "Album")
                        .WithMany("ReleasedAlbums")
                        .HasForeignKey("AlbumID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Erhan_Ana_Maria_proiect_final.Models.Label", "Label")
                        .WithMany("ReleasedAlbums")
                        .HasForeignKey("LabelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("Label");
                });

            modelBuilder.Entity("Erhan_Ana_Maria_proiect_final.Models.Album", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("ReleasedAlbums");
                });

            modelBuilder.Entity("Erhan_Ana_Maria_proiect_final.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Erhan_Ana_Maria_proiect_final.Models.Label", b =>
                {
                    b.Navigation("ReleasedAlbums");
                });
#pragma warning restore 612, 618
        }
    }
}
